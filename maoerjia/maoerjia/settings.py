"""
Django settings for maoerjia project.

Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ul0ah*q@r&#01nq38j%8hy7e4!*xv%&%as3rra4#ok$10ss&b#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["140.143.154.13",]


# Application definition

INSTALLED_APPS = [
    "simpleui",
    'family.apps.FamilyConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'maoerjia.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'maoerjia.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/
# 静态文件配置详情查看https://blog.csdn.net/fighter_yy/article/details/41249033

STATIC_URL = '/static/' # 它是URL的映射，前后要加上‘/’, 加上STATIC_URL这个属性之后，
    # js、css文件的链接前面会加上"/static/"这个值。
STATIC_ROOT = os.path.join(BASE_DIR, "static").replace('\\', '/') # 必须为绝对路径。 STATIC_ROOT与MEDIA_ROOT、
    # STATICFILES_DIRS位置不能一样,  一般用来放一些公共的js,css等，
    # 在生产环境下，运行 python manage.py collectstatic命令后，项目的所有js、css会自动被搜集到
    # 这个目录下，并且每一次运行该命令，都会覆盖之前的文件。
MEDIA_URL = '/media/' # 存放用户上传的文件、图片等，比如在Model里面的FileFIeld，ImageField上传的文件，就会存放在在这个目录下。
           # 它是URL的映射，前后要加上‘/’,加上MEDIA_URL这个属性之后，图片文件的链接前面会加上"/media/"这个值。
MEDIA_ROOT=os.path.join(BASE_DIR, "media").replace('\\', '/') # 必须为绝对路径，存放用户上传的文件、图片等，
    # 比如在Model里面的FileFIeld，ImageField上传的文件，就会存放在在这个目录下。
"""

在部署阶段最大的不同在于你必须让web服务器来处理media文件，因此你必须在web服务器中配置，以便能让web服务器能访问media文件

以nginx为例，可以在nginx.conf里面这样：

location ~/media/{
   root   /home/ops/maoerjia/
   break;
}

location ~/static/{
   root   /home/ops/maoerjia/
   break;
}
"""
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, "selfstatic"), 
) # 存放自定义的一些js、css等静态文件，STATICFILES_DIRS是一个列表。
  # 运行 python manage.py collectstatic命令后，django会自动从这里定义的目录下搜集js、css文件，也会从django自带的静态文件中搜集。